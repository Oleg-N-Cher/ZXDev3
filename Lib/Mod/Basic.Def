MODULE Basic; (** non-portable *)
(*-----------------------------------*)
(*   ZX Spectrum 48k BASIC library   *)
(* for Ofront & SDCC by Oleg N. Cher *)
(*  VEDAsoft Oberon Club, 2012-2017  *)
(*-----------------------------------*)

CONST
	Black        * =   0;
	Blue         * =   1;
	Red          * =   2;
	Magenta      * =   3;
	Green        * =   4;
	Cyan         * =   5;
	Olive        * =   6;
	LightGray    * =   7;
	Paper        * =   8;
	Bright       * = 40H;
	Flash        * = 80H;

	LightBlue    * = Blue;
	LightRed     * = Red;
	LightMagenta * = Magenta;
	LightGreen   * = Green;
	LightCyan    * = Cyan;
	Yellow       * = Olive;
	White        * = LightGray;

	On           * = 1;
	Off          * = 0;

	WaitAKey* = 0; NoKeys* = 0X;
	
	RomFont* = 3D00H;

TYPE
	UBYTE = INTEGER;
	CARDINAL = INTEGER;
	WORD = INTEGER;
	Color* = SHORTINT;
	Coords* = SHORTINT;
	TextCoords* = SHORTINT;
	Mode = SHORTINT;
	ADDRESS = LONGINT;

PROCEDURE Init* ; END Init;

PROCEDURE ABS* (x: SHORTINT): SHORTINT; BEGIN RETURN 0 END ABS;
PROCEDURE ABSI* (x: INTEGER): INTEGER; BEGIN RETURN 0 END ABSI;
PROCEDURE AT* (y, x: TextCoords); END AT;
PROCEDURE ATTR* (y, x: TextCoords): UBYTE; BEGIN RETURN 0 END ATTR;
PROCEDURE BEEP* (ms: CARDINAL; freq: SHORTINT); END BEEP;
PROCEDURE BORDER* (color: Color); END BORDER;
PROCEDURE BRIGHT* (mode: Mode); END BRIGHT;
PROCEDURE CIRCLE* (cx, cy, radius: UBYTE); END CIRCLE;
PROCEDURE CIRCLEW* (cx, cy: UBYTE; radius: INTEGER); END CIRCLEW;
PROCEDURE CIRCLEROM* (cx, cy, radius: UBYTE); END CIRCLEROM;
PROCEDURE CLS* ; END CLS;
PROCEDURE COLOR* (attr: UBYTE); END COLOR;
PROCEDURE DATA* (b: UBYTE); END DATA;
PROCEDURE DATA1* (b: UBYTE); END DATA1;
PROCEDURE DATA2* (b1,b2: UBYTE); END DATA2;
PROCEDURE DATA3* (b1,b2,b3: UBYTE); END DATA3;
PROCEDURE DATA4* (b1,b2,b3,b4: UBYTE); END DATA4;
PROCEDURE DATA5* (b1,b2,b3,b4,b5: UBYTE); END DATA5;
PROCEDURE DATA6* (b1,b2,b3,b4,b5,b6: UBYTE); END DATA6;
PROCEDURE DATA7* (b1,b2,b3,b4,b5,b6,b7: UBYTE); END DATA7;
PROCEDURE DATA8* (b1,b2,b3,b4,b5,b6,b7,b8: UBYTE); END DATA8;
PROCEDURE DATA9* (b1,b2,b3,b4,b5,b6,b7,b8,b9: UBYTE); END DATA9;
PROCEDURE DATA10* (b1,b2,b3,b4,b5,b6,b7,b8,b9,b10: UBYTE);
  END DATA10;
PROCEDURE DATA11* (b1,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11: UBYTE);
  END DATA11;
PROCEDURE DATA12* (b1,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12: UBYTE);
  END DATA12;
PROCEDURE DATA13* (b1,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12,b13: UBYTE);
  END DATA13;
PROCEDURE DATA14* (b1,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12,b13,b14: UBYTE);
  END DATA14;
PROCEDURE DATA15* (b1,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12,b13,b14,b15:
  UBYTE); END DATA15;
PROCEDURE DATA16* (b1,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12,b13,b14,b15,b16:
  UBYTE); END DATA16;
PROCEDURE DATACH* (b: CHAR); END DATACH;
PROCEDURE DATACH1* (b: CHAR); END DATACH1;
PROCEDURE DATACH2* (b1,b2: CHAR); END DATACH2;
PROCEDURE DATACH3* (b1,b2,b3: CHAR); END DATACH3;
PROCEDURE DATACH4* (b1,b2,b3,b4: CHAR); END DATACH4;
PROCEDURE DATACH5* (b1,b2,b3,b4,b5: CHAR); END DATACH5;
PROCEDURE DATACH6* (b1,b2,b3,b4,b5,b6: CHAR); END DATACH6;
PROCEDURE DATACH7* (b1,b2,b3,b4,b5,b6,b7: CHAR); END DATACH7;
PROCEDURE DATACH8* (b1,b2,b3,b4,b5,b6,b7,b8: CHAR); END DATACH8;
PROCEDURE DATACH9* (b1,b2,b3,b4,b5,b6,b7,b8,b9: CHAR); END DATACH9;
PROCEDURE DATACH10* (b1,b2,b3,b4,b5,b6,b7,b8,b9,b10: CHAR);
  END DATACH10;
PROCEDURE DATACH11* (b1,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11: CHAR);
  END DATACH11;
PROCEDURE DATACH12* (b1,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12: CHAR);
  END DATACH12;
PROCEDURE DATACH13* (b1,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12,b13: CHAR);
  END DATACH13;
PROCEDURE DATACH14* (b1,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12,b13,b14: CHAR);
  END DATACH14;
PROCEDURE DATACH15* (b1,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12,b13,b14,b15:
  CHAR); END DATACH15;
PROCEDURE DATACH16* (b1,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12,b13,b14,b15,b16:
  CHAR); END DATACH16;
PROCEDURE DATASTR* (str: ARRAY OF CHAR); END DATASTR;
PROCEDURE DATASTRZ* (str: ARRAY OF CHAR); END DATASTRZ;
PROCEDURE DATAW* (w: WORD); END DATAW;
PROCEDURE DATAW1* (w: WORD); END DATAW1;
PROCEDURE DATAW2* (w1,w2: WORD); END DATAW2;
PROCEDURE DATAW3* (w1,w2,w3: WORD); END DATAW3;
PROCEDURE DATAW4* (w1,w2,w3,w4: WORD); END DATAW4;
PROCEDURE DATAW5* (w1,w2,w3,w4,w5: WORD); END DATAW5;
PROCEDURE DATAW6* (w1,w2,w3,w4,w5,w6: WORD); END DATAW6;
PROCEDURE DATAW7* (w1,w2,w3,w4,w5,w6,w7: WORD); END DATAW7;
PROCEDURE DATAW8* (w1,w2,w3,w4,w5,w6,w7,w8: WORD); END DATAW8;
PROCEDURE DATAW9* (w1,w2,w3,w4,w5,w6,w7,w8,w9: WORD); END DATAW9;
PROCEDURE DATAW10* (w1,w2,w3,w4,w5,w6,w7,w8,w9,w10: WORD); END DATAW10;
PROCEDURE DATAW11* (w1,w2,w3,w4,w5,w6,w7,w8,w9,w10,w11: WORD); END DATAW11;
PROCEDURE DATAW12* (w1,w2,w3,w4,w5,w6,w7,w8,w9,w10,w11,w12: WORD); END DATAW12;
PROCEDURE DATAW13* (w1,w2,w3,w4,w5,w6,w7,w8,w9,w10,w11,w12,w13: WORD);
  END DATAW13;
PROCEDURE DATAW14* (w1,w2,w3,w4,w5,w6,w7,w8,w9,w10,w11,w12,w13,w14: WORD);
  END DATAW14;
PROCEDURE DATAW15* (w1,w2,w3,w4,w5,w6,w7,w8,w9,w10,w11,w12,w13,w14,w15:
  WORD); END DATAW15;
PROCEDURE DATAW16* (w1,w2,w3,w4,w5,w6,w7,w8,w9,w10,w11,w12,w13,w14,w15,w16:
  WORD); END DATAW16;
PROCEDURE DEFDATA* (var, size: INTEGER); END DEFDATA;
PROCEDURE DEFDATAREL* (var, size: INTEGER); END DEFDATAREL;
PROCEDURE DRAW* (x, y: INTEGER); END DRAW;
PROCEDURE FLASH* (mode: Mode); END FLASH;
PROCEDURE FONT* (adr: ADDRESS); END FONT;
PROCEDURE IM2PROC* (proc: PROCEDURE); END IM2PROC;
PROCEDURE INK* (color: Color); END INK;
PROCEDURE INKEY* (): CHAR; END INKEY;
PROCEDURE INVERSE* (mode: Mode); END INVERSE;
PROCEDURE OVER* (mode: Mode); END OVER;
PROCEDURE PAINT* (x, y: UBYTE; ink: Color); END PAINT;
PROCEDURE PAPER* (color: Color); END PAPER;
PROCEDURE PAUSE* (ticks: CARDINAL); END PAUSE;
PROCEDURE PEEK* (adr: ADDRESS): UBYTE; BEGIN RETURN 0 END PEEK;
PROCEDURE PEEKW* (adr: ADDRESS): CARDINAL; BEGIN RETURN 0 END PEEKW;
PROCEDURE PLOT* (x, y: UBYTE); END PLOT;
PROCEDURE POINT* (x, y: Coords): BOOLEAN; BEGIN RETURN FALSE END POINT;
PROCEDURE POKE* (adr: ADDRESS; value: UBYTE); END POKE;
PROCEDURE POKEW* (adr: ADDRESS; value: CARDINAL); END POKEW;
PROCEDURE PORTIN* (port: ADDRESS): UBYTE; BEGIN RETURN 0 END PORTIN;
PROCEDURE PORTOUT* (port: ADDRESS; value: UBYTE); END PORTOUT;
PROCEDURE PRCHAR* (ch: CHAR); END PRCHAR;
PROCEDURE PRDATA* ; END PRDATA;
PROCEDURE PRESSED* (): BOOLEAN; BEGIN RETURN TRUE END PRESSED;
PROCEDURE PRINT* (n: INTEGER); END PRINT;
PROCEDURE PRLN* ; END PRLN;
PROCEDURE PRSTR* (str: ARRAY OF CHAR); END PRSTR;
PROCEDURE PRUDG* (udg: CHAR); END PRUDG;
PROCEDURE PRWORD* (n: LONGINT); END PRWORD;
PROCEDURE RANDOMIZE* (seed: CARDINAL); END RANDOMIZE;
PROCEDURE READ* (adr: ADDRESS): UBYTE; BEGIN RETURN 0 END READ;
PROCEDURE RND* (min, max: UBYTE): UBYTE; BEGIN RETURN 0 END RND;
PROCEDURE RNDW* (min, max: CARDINAL): CARDINAL; BEGIN RETURN 0 END RNDW;
PROCEDURE SGN* (x: SHORTINT): SHORTINT; BEGIN RETURN 0 END SGN;
PROCEDURE SGNI* (x: INTEGER): SHORTINT; BEGIN RETURN 0 END SGNI;
PROCEDURE UDG* (adr: ADDRESS); END UDG;
PROCEDURE USR0* ; END USR0;

PROCEDURE Quit* ; END Quit;

END Basic.
